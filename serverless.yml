# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: andriy1997
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: fault-tolerant-system
# "service" is the name of this project. This will also be added to your AWS resource names.
service: fault-tolerant-system

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:ChangeMessageVisibility
      Resource:
        - !GetAtt MainQueue.Arn
        - !GetAtt DLQ.Arn
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: !GetAtt TaskTable.Arn

package:
  patterns:
    - handler/**

functions:
  submitTask:
    handler: handler/submitTask.submitTask
    events:
      - http:
          path: /tasks
          method: post
    environment:
      MAIN_QUEUE_URL: !Ref MainQueue
      TABLE_NAME: !Ref TaskTable

  processTask:
    handler: handler/processTask.processTask
    events:
      - sqs:
          arn: !GetAtt MainQueue.Arn
          batchSize: 1
    environment:
      MAIN_QUEUE_URL: !Ref MainQueue
      TABLE_NAME: !Ref TaskTable

  monitorDLQ:
    handler: handler/monitorDLQ.monitorDLQ
    events:
      - sqs:
          arn: !GetAtt DLQ.Arn
    environment:
      TABLE_NAME: !Ref TaskTable

resources:
  Resources:
    MainQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: main-queue
        VisibilityTimeout: 30
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt DLQ.Arn
          maxReceiveCount: 3
    DLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: dlq
    TaskTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: tasks
        AttributeDefinitions:
          - AttributeName: taskId
            AttributeType: S
        KeySchema:
          - AttributeName: taskId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST